02 GPIO part C {#STM32_TUT02_GPIO_PART_C}
=========================================

[TOC]

1. Introduction {#STM32_TUT02_GPIO_PART_C_INTRO}
================================================

*How to configure and use General Purpose (digital) I/O pins - part C*

File(s): 
- arch/arm/stm32/tutorials/02_gpio_part_c/gpio.c

This example flashes the LED at 1 Hz (500 ms on; 500 ms off). On the 
[PX-HER0 Board](@ref PICONOMIX_STM32_HERO_BOARD), the LED is wired to Port H pin 0.
PH0 must be configured as a digital output pin. Set PH0 high to enable the LED 
and set PH0 low to disable the LED.

1. STM32Cube library (including CMSIS) {#STM32_TUT02_GPIO_PART_C_STM32CUBE}
===========================================================================

ST provides the STM32Cube library which includes the Arm 
[CMSIS](https://developer.arm.com/tools-and-software/embedded/cmsis) (Cortex 
Microcontroller Software Interface Standard) library. It defines consistent 
access to the peripheral registers. See:

    px-fwlib/libs/STM32Cube/L0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h
    px-fwlib/libs/STM32Cube/L0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l072xx.h

@tip_s
Part A and B was created as an introduction to understand how to use the 
definitions in these files.
@tip_e

Use the family include file "stm32l0xx.h" and specify the specific
microcontroller in the Makefile:

    CDEFS += STM32L072xx

Inspect "stm32l072xx.h" and you will find the relevant definitions:

    @code{.c}
    typedef struct
    {
      __IO uint32_t MODER;
      __IO uint32_t OTYPER;
      __IO uint32_t OSPEEDR;
      __IO uint32_t PUPDR;
      __IO uint32_t IDR;
      __IO uint32_t ODR;
      __IO uint32_t BSRR;
      __IO uint32_t LCKR;
      __IO uint32_t AFR[2];
      __IO uint32_t BRR;
    } GPIO_TypeDef;

    ...

    #define PERIPH_BASE             (0x40000000UL)
    #define IOPPERIPH_BASE          (PERIPH_BASE + 0x10000000UL)
    #define GPIOH_BASE              (IOPPERIPH_BASE + 0x00001C00UL)
    #define GPIOH                   ((GPIO_TypeDef *) GPIOH_BASE)

    ...

    #define GPIO_MODER_MODE0_Pos    (0U)  
    #define GPIO_MODER_MODE0_Msk    (0x3UL << GPIO_MODER_MODE0_Pos)
    #define GPIO_MODER_MODE0        GPIO_MODER_MODE0_Msk                   
    #define GPIO_MODER_MODE0_0      (0x1UL << GPIO_MODER_MODE0_Pos)
    #define GPIO_MODER_MODE0_1      (0x2UL << GPIO_MODER_MODE0_Pos)
    #define GPIO_MODER_MODE1_Pos    (2U)
    @endcode

In "px-fwlib/libs/STM32Cube/L0/Drivers/CMSIS/Include/core_cm0plus.h" you will find
the definition of '__IO':

    @code{.c}
    #define __IO            volatile
    @endcode
